/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 palmf.gltf 
*/

import React, {useRef} from "react";
import {useGLTF} from "@react-three/drei";
import {useFrame} from "@react-three/fiber";
import * as THREE from "three";

// export function Palm(props) {
//     const {nodes, materials} = useGLTF("models/palm.gltf");
//     const modelRef = useRef(null);
//     useFrame((state) => {
//         const t = state.clock.getElapsedTime();
//         // modelRef.current.rotation.x = THREE.MathUtils.lerp(group.current.rotation.x, Math.cos(t / 2) / 20 + 0.25, 0.1)
//         // modelRef.current.rotation.z = THREE.MathUtils.lerp(group.current.rotation.y, Math.sin(t / 4) / 20, 0.1)
//         modelRef.current.rotation.z = THREE.MathUtils.lerp(
//             modelRef.current.rotation.z,
//             Math.sin(t / 5) / 20,
//             0.1,
//         );
//         // group.current.position.y = THREE.MathUtils.lerp(group.current.position.y, (-2 + Math.sin(t / 2)) / 2, 0.1)
//     });

//     return (
//         <group {...props} dispose={null} ref={modelRef}>
//             <mesh
//                 geometry={nodes.Object_7.geometry}
//                 material={materials.CocosNucifera_Material}
//             />
//         </group>
//     );
// }

// useGLTF.preload("models/palm.gltf");
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 palm.gltf 
Author: aliyeredon (https://sketchfab.com/aliyeredon)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/realistic-palm-tree-model-vol2-56e55c30c03b4b6993441e0a15b87a19
Title: Realistic Palm Tree Model vol.2
*/

export function Palm(props) {
    const {nodes, materials} = useGLTF("models/palm2.gltf");
    const modelRef = useRef(null);

    useFrame((state) => {
        const t = state.clock.getElapsedTime();
        // modelRef.current.rotation.x = THREE.MathUtils.lerp(group.current.rotation.x, Math.cos(t / 2) / 20 + 0.25, 0.1)
        // modelRef.current.rotation.z = THREE.MathUtils.lerp(group.current.rotation.y, Math.sin(t / 4) / 20, 0.1)
        modelRef.current.rotation.z = THREE.MathUtils.lerp(
            modelRef.current.rotation.z,
            Math.sin(t / 5) / 20 + props.rotation[2] / 8,
            0.1,
        );
        // group.current.position.y = THREE.MathUtils.lerp(group.current.position.y, (-2 + Math.sin(t / 2)) / 2, 0.1)
    });

    return (
        <group {...props} dispose={null} ref={modelRef}>
            <group scale={0.01}>
                <mesh
                    geometry={nodes.Palm_1_2_Palm_Center_0.geometry}
                    material={materials.Palm_Center}
                />
                <mesh
                    geometry={nodes.Palm_1_2_Palm_Trunk_0.geometry}
                    material={materials.Palm_Trunk}
                />
                <mesh
                    geometry={nodes.Palm_1_2_Palm_Leaf_0.geometry}
                    material={materials.Palm_Leaf}
                />
            </group>
        </group>
    );
}

useGLTF.preload("models/palm2.gltf");
